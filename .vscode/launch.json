{
    // 使用 IntelliSense 了解相关属性。 
    // 悬停以查看现有属性的描述。
    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "MuCGEC_Seq2Seq",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "seq2seq",
                "--task_mode", "train",
                "--dataset", "mucgec",
                "--save_root_dir", "results",
                "--device", "2",
                "--devices", "0,1,2,3"
            ],
        },
        {
            "name": "MuCGEC_Seq2Edit",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "seq2edit",
                "--task_mode", "train",
                "--dataset", "mucgec",
                "--save_root_dir", "results",
                "--device", "2",
                "--devices", "0,1,2,3"
            ],
        },        
        {
            "name": "MuCGEC-STGJoint",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "stgjoint",
                "--task_mode", "train",
                "--dataset", "mucgec",
                "--save_root_dir", "results",
                "--device", "0",
                "--devices", "0,1,2,3"
            ],
        },
        {
            "name": "STGJoint-MuCGEC",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "stgjoint",
                "--task_mode", "infer",
                "--dataset", "mucgec",
                "--save_root_dir", "results",
                "--load", "results/stgjoint-mucgec-20230411-1832",
                "--device", "0",
                "--devices", "1"
            ],
        },
        {
            "name": "Seq2Seq_FangZheng",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "seq2seq",
                "--task_mode", "train",
                "--dataset", "fangzhengdapei",
                "--save_root_dir", "results",
                "--device", "2",
                "--devices", "0,1,2,3"
            ],
        },
        {
            "name": "Seq2Edit_FangZheng",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "seq2edit",
                "--task_mode", "train",
                "--dataset", "fangzhengdapei",
                "--save_root_dir", "results",
                "--device", "2",
                "--devices", "0,1,2,3"
            ],
        },  
        {
            "name": "GECToR",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "gector",
                "--task_mode", "train",
                "--dataset", "mucgec",
                "--save_root_dir", "results",
                "--device", "0",
                "--devices", "0,1,2,3",
                "--load", "results/gector-pretrain-20230428-1114",
            ],
        },  
        {
            "name": "GECToR_infer",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "gector",
                "--task_mode", "infer",
                "--dataset", "mucgec",
                "--save_root_dir", "results",
                "--device", "0",
                "--devices", "0,1,2,3",
                "--load", "results/gector-mucgec-train-20230507-1408",
            ],
        },
        {
            "name": "GLM_GEC",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "correctionglm",
                "--task_mode", "train",
                "--dataset", "mucgec",
                "--save_root_dir", "debug_results",
                "--device", "0",
                "--devices", "3",
            ],
        },  
        {
            "name": "GLM_GEC_infer",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "correctionglm",
                "--task_mode", "infer",
                "--dataset", "mucgec",
                "--save_root_dir", "debug_results",
                "--load", "glm_results/correctionglm-mucgec-train-20231010-1624/checkpoint-60000",
                "--device", "0",
                "--devices", "1",
            ],
        }, 
        {
            "name": "GLM_GEC_eval",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "correctionglm",
                "--task_mode", "eval",
                "--dataset", "mucgec",
                "--save_root_dir", "debug_results",
                "--load", "glm_results/correctionglm-mucgec-train-20231010-1624/checkpoint-60000",
                "--device", "0",
                "--devices", "2",
            ],
        },
        {
            "name": "GLM_C4",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "correctionglm",
                "--task_mode", "train",
                "--dataset", "c4",
                "--save_root_dir", "results_glm",
                "--device", "0",
                "--devices", "1",
            ],
        }, 
        {
            "name": "GLM_Lang8",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "correctionglm",
                "--task_mode", "train",
                "--dataset", "lang8",
                "--save_root_dir", "results_glm",
                "--device", "0",
                "--devices", "1",
            ],
        }, 
        {
            "name": "GLM_Temp",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "correctionglm",
                "--task_mode", "infer",
                "--dataset", "fcgec",
                "--save_root_dir", "infer_results",
                "--load", "glm_results/correctionglm-fcgec-train-20231108-1547/checkpoint-3200",
                "--device", "0",
                "--devices", "1",
            ],
        }, 
        {
            "name": "Seq2SeqNew_MuCGEC_infer",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "seq2seqbeta",
                "--task_mode", "infer",
                "--dataset", "mucgec",
                "--save_root_dir", "results_infer",
                "--device", "2",
                "--devices", "0,1,2,3",
                "--load", "results_glm/seq2seqbeta-mucgec-train-20231128-1119/checkpoint-12000",
            ],
        },
        {
            "name": "LLM_FangZheng",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "chinese_llama",
                "--task_mode", "test",
                "--dataset", "fangzhenggrammar",
                "--save_root_dir", "results",
                "--device", "1",
                "--devices", "0,1,2,3"
            ],
        },   
        {
            "name": "LLM_ChatGLM_FangZheng",
            "type": "python",
            "request": "launch",
            "program": "main.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--model", "llm",
                "--task_mode", "test",
                "--dataset", "fangzhenggrammar",
                "--save_root_dir", "results",
                "--device", "1",
                "--devices", "0,1,2,3"
            ],
        },  
        {
            "name": "ChatGLM",
            "type": "python",
            "request": "launch",
            "program": "scripts/chatglm_test.py",
            "console": "integratedTerminal",
            "justMyCode": true,
            "args": [
                "--do_train",
                "--train_file", "/home/liwei/workspace/datasets/AdvertiseGen/train.json",
                "--validation_file", "/home/liwei/workspace/datasets/AdvertiseGen/dev.json",
                "--prompt_column", "content",
                "--response_column", "summary",
                "--overwrite_cache",
                "--model_name_or_path", "/home/liwei/workspace/models/chatglm-6b",
                "--output_dir", "/home/liwei/workspace/ChineseGEC/scripts/output/adgen-chatglm-6b-p",
                "--overwrite_output_dir",
                "--max_source_length", "64",
                "--max_target_length", "64",
                "--per_device_train_batch_size", "4",
                "--per_device_eval_batch_size", "1",
                "--gradient_accumulation_steps", "4",
                "--predict_with_generate",
                "--max_steps", "3000",
                "--logging_steps", "10",
                "--save_steps", "1000",
                "--learning_rate", "2e-2",
                "--pre_seq_len", "128",
                "--quantization_bit", "4"
            ],
        },
    ]
}